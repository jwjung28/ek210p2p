/*
  IR Receiver + LCD status test
  - Receiver OUT -> Arduino D2
  - Receiver VCC/GND -> 5V/GND (or 3.3V per module)
  - LCD: I2C (SDA/SCL) -> A4/A5 on UNO/Nano (or SDA/SCL pins on your board)
  - Behavior: Every 100 ms, print to Serial and show on LCD:
      "Received" when carrier is detected, else "No signal".

  NOTE on logic: Most 38 kHz IR demodulators idle HIGH and go LOW on carrier.
                 If yours is opposite, set ACTIVE_LOW = false.
*/

#include <Wire.h>
#include <LiquidCrystal_I2C.h>

const uint8_t  RX_PIN             = 2;          // Receiver output pin
const bool     ACTIVE_LOW         = true;       // true: LOW means carrier present; false: HIGH means present
const unsigned SAMPLE_PERIOD_MS   = 100;        // overall sample/print cadence
const unsigned DETECT_WINDOW_US   = 20000;      // look window for any pulse (20 ms)

LiquidCrystal_I2C lcd(0x27, 16, 2); // change 0x27 -> 0x3F if your backpack uses 0x3F

// Track last display to avoid needless LCD writes
enum SigState { SIG_NONE = 0, SIG_PRESENT = 1 };
SigState lastShown = SIG_NONE;

void setup() {
  Serial.begin(115200);

  // Receiver input (most modules are open-collector; pull-up helps idle HIGH)
  pinMode(RX_PIN, INPUT_PULLUP);

  // LCD init
  lcd.init();
  lcd.backlight();
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("IR Status:");
  lcd.setCursor(0, 1);
  lcd.print("Initializing...");

  delay(200);
  Serial.println("IR + LCD test starting...");
}

void loop() {
  unsigned long t0 = millis();

  // Use pulseIn to check for any detection edge within a short window
  unsigned long width = pulseIn(RX_PIN, ACTIVE_LOW ? LOW : HIGH, DETECT_WINDOW_US);
  bool receiving = (width > 0);

  // Serial output (every cycle)
  Serial.println(receiving ? "receiving" : "no signal");

  // LCD update only when the status changes (prevents flicker)
  SigState now = receiving ? SIG_PRESENT : SIG_NONE;
  if (now != lastShown) {
    lcd.setCursor(0, 0);
    lcd.print("IR Status:       ");  // pad to clear line
    lcd.setCursor(0, 1);
    if (receiving) {
      lcd.print("Received         ");
    } else {
      lcd.print("No signal        ");
    }
    lastShown = now;
  }

  // Keep loop period ~100 ms
  while (millis() - t0 < SAMPLE_PERIOD_MS) { /* wait */ }
}
