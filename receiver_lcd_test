/*
  IR Receiver (pin 4) + I2C LCD (SDA=A4, SCL=A5) status test with LCD hold time
  - Keeps "Received" on the LCD for RECEIVED_HOLD_MS after the last detection
*/

#include <Wire.h>
#include <LiquidCrystal_I2C.h>

const uint8_t  RX_PIN           = 4;           // receiver on D4
const bool     ACTIVE_LOW       = true;        // true: LOW means carrier present
const unsigned SAMPLE_MS        = 100;         // update cadence (Serial + detection check)
const unsigned DETECT_WIN_US    = 20000;       // look for any pulse within 20 ms
const unsigned RECEIVED_HOLD_MS = 1000;        // <-- how long to keep "Received" on LCD after last detect

LiquidCrystal_I2C lcd(0x27, 16, 2);            // change 0x27 -> 0x3F if needed

enum SigState { SIG_NONE = 0, SIG_PRESENT = 1 };
SigState lastShown = SIG_NONE;

unsigned long lastDetectMs = 0;                // timestamp of the most recent detection

void setup() {
  Serial.begin(115200);
  pinMode(RX_PIN, INPUT_PULLUP);               // many demodulators are open-collector

  lcd.init();
  lcd.backlight();
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("IR Status:");
  lcd.setCursor(0, 1);
  lcd.print("Initializing...");

  delay(200);
  Serial.println("IR + LCD test (RX=D4) starting...");
}

void loop() {
  const unsigned long t0 = millis();

  // Detect any “carrier-present” pulse within the short window
  const unsigned long width = pulseIn(RX_PIN, ACTIVE_LOW ? LOW : HIGH, DETECT_WIN_US);
  const bool receivingNow = (width > 0);

  if (receivingNow) {
    lastDetectMs = millis(); // remember last time we saw carrier
  }

  // Serial log each cycle (immediate)
  Serial.println(receivingNow ? "receiving" : "no signal");

  // Decide what the LCD should show with a hold window to reduce flicker
  const bool withinHold = (millis() - lastDetectMs) <= RECEIVED_HOLD_MS;
  const bool showReceivedOnLCD = receivingNow || withinHold;

  SigState now = showReceivedOnLCD ? SIG_PRESENT : SIG_NONE;

  // Update LCD only on state change to minimize writes/flicker
  if (now != lastShown) {
    lcd.setCursor(0, 0);
    lcd.print("IR Status:       ");  // pad to clear line
    lcd.setCursor(0, 1);
    if (showReceivedOnLCD) {
      lcd.print("Received         ");
    } else {
      lcd.print("No signal        ");
    }
    lastShown = now;
  }

  // Hold total loop near SAMPLE_MS
  while (millis() - t0 < SAMPLE_MS) { /* wait */ }
}
